#!/bin/bash

# adb_global: A script to allow global access of the ADB executable provided with the Android SDK http://developer.android.com/sdk/index.html

# Copyright (C) 2012  Ryan Esteves
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
function helpmsg
{
	echo "Usage: $0 [ARGUMENTS] <PathToAdb>"
	echo "	Arguments"
	echo "		-h -H	Creates a symbolic link in the users bin folder (~/bin/) rather than using the global PATH variable"
	echo ""
}
function addpathvar
{
	ADBLOC=$1
	read -p "This is going to modify '/etc/bash.bashrc'. Continue? (Y,n)" yn
	case $yn in
	    [Yy]) echo "export PATH=$PATH:/usr/local/android-sdk/platform-tools" >> /etc/bash.bashrc && echo "Done! You should now restart your computer.";;
		[Nn]) exit;;
		*) "Invalid selection. Aborting." && exit;;
	esac
}
function createsymlink
{
	ADBLOC=$1/adb
	if [ ! -d ~/bin/ ]; then
		mkdir -p ~/bin/
	fi
	if [ -e $ADBLOC ]; then
		ln -s $ADBLOC ~/bin/
		echo "Done!"
	else
		echo "Invalid ADB location specified! File does not exist!"
		exit 1
	fi
}

echo ""

if [ ! $1 ]; then
helpmsg
exit
fi

while getopts ":h:H:-:" opt; do
    case $opt in
        [hH]) ADBLOC=$OPTARG;;
        -) {
            case $OPTARG in
                help) helpmsg; exit;;
                *) echo "Invalid option: --$OPTARG" >&2; exit 1;;
            esac
        };;
       \?) echo "Invalid option: -$OPTARG" >&2; exit 1;;
        :) echo "Option -$OPTARG requires an argument." >&2; exit 1;;
    esac
done

if [ $ADBLOC ]; then
    if [[ $(echo "$ADBLOC" | grep -i '/adb') && -e $ADBLOC ]]; then
        echo "Creating Symbolic link"
	    createsymlink $ADBLOC
	else
        echo -e "Invalid ADB path or ADB not found!\n$ADBLOC" >&2; exit 1;
	fi
else
    if [[ $(echo "$1" | grep -i '/adb') && -e $1 ]]; then
	    ADBLOC=$(dirname "$1")
        echo "Adding to PATH variable"
	    addpathvar $ADBLOC
	else
        echo -e "Invalid ADB path or ADB not found!\n$ADBLOC" >&2; exit 1;
	fi
fi
