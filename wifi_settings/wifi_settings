#!/bin/bash

# wifi_settings: A script used to backup and restore the wifi configuration of Android devices

# Copyright (C) 2012  Ryan Esteves
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

function backup
{
FILENAME=$1
echo "Backing up wifi configuration..."
if [ ! $FILENAME ]; then
	FILENAME="wpa_supplicant_$(date +"%m-%d-%Y_%H-%M-%S")"
else
	if [ -e $FILENAME ]; then
		read -p "$FILENAME already exists. Overwrite? (y,N)" yn
		case $yn in
			[Nn]* ) exit;;
			[Yy]* );;
			* ) exit;;
		esac
	fi
fi
echo "Please connect your device now"
connectdevice
echo "Downloading wifi configuration to $FILENAME..."
adb pull /data/misc/wifi/wpa_supplicant.conf "$FILENAME"
echo "Done"
}

function restore
{
FILENAME=$1
if [ $FILENAME=="" ]; then
	echo "No configuration file provided!"
	helpprompt
elif [ !$FILENAME ]; then
	echo "File does not exist $FILENAME"
fi
echo "Restoring wifi configuration..."
echo "Connecting to device..."
connectdevice
echo "Pushing wifi configuration to" $(adb get-serialno)
adb push $FILENAME /data/misc/wifi/wpa_supplicant.conf || exit 1
echo "Fixing permissions and ownership..."
adb shell chown system.wifi /data/misc/wifi/wpa_supplicant.conf || exit 1
adb shell chmod 666 /data/misc/wifi/wpa_supplicant.conf || exit 1
echo "Done"
}

function connectdevice
{
adb root 2>&1 > /dev/null || exit 1
echo "Waiting for device to connect..."
adb 'wait-for-device' || exit 1
}

function helpprompt
{
echo "Usage: $0 [OPTION] [CONFIG FILE LOCATION]"
echo "	-b [BACKUP LOCATION]	Backs up the current wifi configuration."
echo "	-r [BACKUP LOCATION]	Restores the provided wifi configuration file."
echo ""
}

echo "" # Add some white space above for readability

if [ $# == 0 ]; then
helpprompt
exit
fi

while getopts ":b:r:-:" opt; do
    case $opt in
        b) backup $OPTARG;;
        r) restore $OPTARG;;
        -) {
            case $OPTARG in
                help) helpprompt; exit;;
                *) echo "Invalid option: --$OPTARG" >&2; exit 1;;
            esac
        };;
       \?) echo "Invalid option: -$OPTARG" >&2; exit 1;;
        :) echo "Option -$OPTARG requires an argument." >&2; exit 1;;
    esac
done


